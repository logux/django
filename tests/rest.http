#
# List of test requests from the Logux Proxy server to the Django backend.
# Most of them taked from doc's: https://logux.io/protocols/backend/examples/
#
# All of them are for the version 2

# ###
# Proxy Server auth: https://logux.io/protocols/backend/spec/#requests
#

# Proxy Server auth with correct secret.
POST http://localhost:8000/logux/
Content-Type: application/json

{
    "version": 4,
    "secret": "secret",
    "commands": []
}

###

# Proxy Server auth with wrong secret.
POST http://localhost:8000/logux/
Content-Type: application/json

{
    "version": 4,
    "secret": "wrong secret",
    "commands": []
}

###

# ###
# Wrong command. Not Auth and not Action
#

# bad command type -> error (tests/test_project/settings.py:122)
POST http://localhost:8000/logux/
Content-Type: application/json

{
    "version": 4,
    "secret": "secret",
    "commands": [
        [
            "sup guys!",
            "foo",
            "bar",
            "gf4Ygi6grYZYDH5Z2BsoR"
        ]
    ]
}

###

# ###
# "Auth" command: https://logux.io/protocols/backend/spec/#requests
#

# "auth" command -> authenticated (tests/test_project/settings.py:122) for token as cmd kay
POST http://localhost:8000/logux/
Content-Type: application/json

{
    "version": 4,
    "secret": "parole",
    "commands": [
        {
            "command": "auth",
            "authId": "gf4Ygi6grYZYDH5Z2BsoR",
            "userId": "38",
            "token": "good-token",
            "subprotocol": "2.1.2"
        }
    ]
}

###

# "auth" command -> authenticated (tests/test_project/settings.py:122) for token in cookies
POST http://localhost:8000/logux/
Content-Type: application/json

{
    "version": 4,
    "secret": "secret",
    "commands": [
        {
            "command": "auth",
            "authId": "gf4Ygi6grYZYDH5Z2BsoR",
            "userId": "38",
            "cookie": {
                "token": "good-token"
            }
        }
    ]
}

###

# "auth" command -> error (tests/test_project/settings.py:122) missing token
POST http://localhost:8000/logux/
Content-Type: application/json

{
    "version": 4,
    "secret": "secret",
    "commands": [
        {
            "command": "auth",
            "authId": "gf4Ygi6grYZYDH5Z2BsoR",
            "userId": "38"
        }
    ]
}

###

# "auth" command -> denied (tests/test_project/settings.py:122)
POST http://localhost:8000/logux/
Content-Type: application/json

{
    "version": 4,
    "secret": "secret",
    "commands": [
        {
            "command": "auth",
            "authId": "gf4Ygi6grYZYDH5Z2BsoR",
            "userId": "38",
            "token": "bad-token"
        }
    ]
}

###

# ###
# "Action" command: https://logux.io/protocols/backend/spec/#requests
#

# "action" command -> authenticated + user rename (tests/test_project/settings.py:122)
POST http://localhost:8000/logux/
Content-Type: application/json

{
    "version": 3,
    "secret": "secret",
    "commands": [
        [
            "action",
            {
                "type": "user/rename",
                "user": 38,
                "name": "Ivan"
            },
            {
                "id": "1560954012838 38:Y7bysd:O0ETfc 0",
                "time": 1560954012838
            }
        ],
        [
            "action",
            {
                "type": "user/rename",
                "user": 21,
                "name": "Egor"
            },
            {
                "id": "1560954012900 38:Y7bysd:O0ETfc 1",
                "time": 1560954012900
            }
        ]
    ]
}

###

# "action" command -> unknownAction
POST http://localhost:8000/logux/
Content-Type: application/json

{
    "version": 3,
    "secret": "secret",
    "commands": [
        [
            "action",
            {
                "type": "user/unknown",
                "user": 38,
                "name": "New"
            },
            {
                "id": "1560954012838 38:Y7bysd:O0ETfc 0",
                "time": 1560954012838
            }
        ]
    ]
}

###

###

# "action" command -> channels
POST http://localhost:8000/logux/
Content-Type: application/json

{
    "version": 3,
    "secret": "secret",
    "commands": [
        [
            "action",
            {
                "type": "logux/subscribe",
                "channel": "user/38"
            },
            {
                "id": "1560954012858 38:Y7bysd:O0ETfc 0",
                "time": 1560954012858
            }
        ]
    ]
}

###

# "action" command -> channels but with inexistent user (produce UNDO action)
POST http://localhost:8000/logux/
Content-Type: application/json

{
    "version": 3,
    "secret": "secret",
    "commands": [
        [
            "action",
            {
                "type": "logux/subscribe",
                "channel": "user/39"
            },
            {
                "id": "1560954012858 39:Y7bysd:O0ETfc 0",
                "time": 1560954012858
            }
        ]
    ]
}

###

